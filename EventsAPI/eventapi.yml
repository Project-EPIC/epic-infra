firehoseConfigMapName: ${FIREHOSE_CONFIG_NAME:-keywordsconfig}
namespace: ${NAMESPACE:-default}
kafkaServers: ${KAFKA_SERVERS:-"kafka-0.broker.default:9092,kafka-1.broker.default:9092"}
tweetStoreVersion: ${TWEET_STORE_VERSION:-"latest"}
production: ${PRODUCTION:-true}
gcloudProjectID: ${GCLOUD_PROJECT_ID:-"crypto-eon-164220"}
collectBucketName: ${COLLECT_BUCKET_NAME:-"epic-collect"}
templateNameDataproc: ${TEMPLATE_NAME_DATAPROC:-"epic-spark"}

database:
  # the name of your JDBC driver
  driverClass: org.postgresql.Driver

  # the username
  user: ${DB_USERNAME:-postgres}

  # the password
  password: ${DB_PASSWORD:-epicINFRA2019}

  # the JDBC URL
  url: ${DB_URL:-jdbc:postgresql://google/eventsdb?socketFactory=com.google.cloud.sql.postgres.SocketFactory&cloudSqlInstance=crypto-eon-164220:us-central1:epic-event}

  # any properties specific to your JDBC driver:
  properties:
    charSet: UTF-8

  # the maximum amount of time to wait on an empty pool before throwing an exception
  maxWaitForConnection: 1s

  # the SQL query to run when validating a connection's liveness
  validationQuery: "/* MyService Health Check */ SELECT 1"

  # the timeout before a connection validation queries fail
  validationQueryTimeout: 3s

  # the minimum number of connections to keep open
  minSize: 8

  # the maximum number of connections to keep open
  maxSize: 32

  # whether or not idle connections should be validated
  checkConnectionWhileIdle: false

  # the amount of time to sleep between runs of the idle connection validation, abandoned cleaner and idle pool resizing
  evictionInterval: 10s

  # the minimum amount of time an connection must sit idle in the pool before it is eligible for eviction
  minIdleTime: 1 minute
